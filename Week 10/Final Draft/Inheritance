class enermy extends character { // child class : enermy
  // constructor
  enermy(float xnum, float ynum, float radius) {
    super(xnum, ynum, radius);
  }
  //member function
  //적 유령 그리는 함수
  void makeGhost(){
  fill(109, 168, 211);
  stroke(0);
  strokeWeight(0.2*d);
  rect(x-8*d, y, 16*d, 7*d);
  arc(x, y+0.2*d, 16*d, 16*d, PI, 2*PI);
  line(x - 8*d, y + 7*d, x + 8*d, y + 7*d);
  fill(255);
  circle(x-3.2*d, y-2*d, 3.6*d);
  circle(x+3.2*d, y-2*d, 3.6*d);
  fill(0);
  circle(x-3.2*d, y-2*d, 1.8*d);
  circle(x+3.2*d, y-2*d, 1.8*d);
  }
  //유령과 플레이어가 충돌했을 경우
  void collide(player me, UI UIobj){
    float between;
    between = sqrt((me.x - x)*(me.x - x) + (me.y - y)*(me.y - y));
    if(between < 34.75) UIobj.state = 2;
  }
  //유령의 방향전환
  void randomDirection(){
    int i;
    if(y <= 90){//벽 만났을 때 방향전환
      y = 105;
      i=int(random(1,4));
      if(i == 1) {vx = -3; vy = 0;}
      else if(i == 2) {vx = 3; vy = 0;}
      else if(i == 3) {vx = 0; vy = -3;}
    }
    else if(y >= 930){
      y = 915;
      i=int(random(1,4));
      if(i == 1) {vx = -3; vy = 0;}
      else if(i == 2) {vx = 3; vy = 0;}
      else if(i == 3) {vx = 0; vy = 3;}
    }
    else if(x <= 10){
      x = 25;
      i=int(random(1,4));
      if(i == 1) {vx = 0; vy = -3;}
      else if(i == 2) {vx = 0; vy = 3;}
      else if(i == 3) {vx = 3; vy = 0;}
    }
    if(x >= 760){
      x = 745;
      i=int(random(1,4));
      if(i == 1) {vx = 0; vy = -3;}
      else if(i == 2) {vx = 0; vy = 3;}
      else if(i == 3) {vx = -3; vy = 0;}
    }
    for(int j=0; j<9; j++){//각 마디에서의 방향전환
      for(int k=0; k<10; k++){
        i=int(random(1,5));
        if(x == 25+90*j && y == 105+90*k){
         if(i == 1) {vx = 0; vy = -3;}
         else if(i == 2) {vx = 0; vy = 3;}
         else if(i == 3) {vx = -3; vy = 0;} 
         else {vx = 3; vy = 0;}
        }
      }
    }
  }
}//class 닫음
/*----------------player class------------*/
class player extends character { // child class : player
  // constructor
  player(float xnum, float ynum, float radius, UI UIobj) {
    super(xnum, ynum, radius);
    mouse = (UIobj.frames/60)%2;
  }
  //추가 member data
  int mouse; char plan;
  //member function
  void keyPressed(){plan = key;}//누른 값을 plan에 저장
  //wasd 눌러서 마디에서 방향 설정하는 함수
  void changeDirection(){
    if(x <= 10 || x >= 760 || y <= 90 || y >= 930) {vx = -vx; vy = -vy;}
    for(int j=0; j<9; j++){
      for(int k=0; k<10; k++){
        if(x == 25+90*j && y == 105+90*k){
          if(plan == 'w') {vx = 0; vy = -3;}
          else if(plan == 'a') {vx = -3; vy = 0;}
          else if(plan == 's') {vx = 0; vy = 3;} 
          else if(plan == 'd') {vx = 3; vy = 0;}
        }
      }
    }
  }
  /*----------------팩맨 그리는 함수 모음--------------------*/
  void makePacman(){ //동그란 팩맨
  fill(255, 255, 85);
  stroke(0);
  strokeWeight(d);
  arc(x, y, 30*d, 30*d, 0, 2*PI);
  }
void makePacmanUp(){ //위로 입 팩맨
  fill(255, 255, 85);
  stroke(0);
  strokeWeight(d);
  arc(x, y, 30*d, 30*d, -PI/4, PI*5/4);
  }
void makePacmanDown(){ //아래로 입 팩맨
  fill(255, 255, 85);
  stroke(0);
  strokeWeight(d);
  arc(x, y, 30*d, 30*d, -PI*5/4, PI/4);
  }
void makePacmanLeft(){ //왼쪽 입 팩맨
  fill(255, 255, 85);
  stroke(0);
  strokeWeight(d);
  arc(x, y, 30*d, 30*d, -PI*3/4, PI*3/4);
  }
void makePacmanRight(){ //오른쪽 입 팩맨
  fill(255, 255, 85);
  stroke(0);
  strokeWeight(d);
  arc(x, y, 30*d, 30*d, PI/4, PI*7/4);
  }
}//class 닫기
/*------------------coin class ----------------*/
class coin extends character { // child class : enermy
  // constructor
  coin(float xnum, float ynum, float radius) {
    super(xnum, ynum, radius);
  }
  //member function
  void drawCoin(){ //Coin 생성
    fill(251, 232, 193);
    stroke(0);
    strokeWeight(d);
    circle(x, y, 30*d);
  }
  //플레이어가 코인 먹었을 경우의 동작 : 코인이 사라지고 remaining coin 값 -1
  void getCoin(player me, UI UIobj){
    float between;
    between = sqrt((me.x - x)*(me.x - x) + (me.y - y)*(me.y - y));
    if(between < 30){
      UIobj.remainCoin--;
      x = 625; y = 38;
      if(UIobj.remainCoin == 0) UIobj.state = 3;
      }
  }
}
